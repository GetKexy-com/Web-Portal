name: Deploy Angular App to S3 + CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout source code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js (pinned to exact version)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19.1'

      # 3. Install dependencies (with cache)
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      # 4. Build Angular app (with production config)
      - name: Build Angular app
        run: npm run build -- --configuration=production

      # 5. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 6. Sync build to S3 (with proper caching headers)
      - name: Upload build to S3 with cache control
        run: |
          aws s3 sync ./dist/kexy-brand-portal/ s3://${{ secrets.S3_BUCKET }} \
            --delete \
            --cache-control "max-age=31536000" \
            --exclude "index.html" \
            --exclude "asset-manifest.json"
          
          # Special handling for files that shouldn't be cached long
          aws s3 cp ./dist/kexy-brand-portal/index.html s3://${{ secrets.S3_BUCKET }} \
            --cache-control "no-cache"
          aws s3 cp ./dist/kexy-brand-portal/asset-manifest.json s3://${{ secrets.S3_BUCKET }} \
            --cache-control "no-cache"

      # 7. Invalidate CloudFront cache
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"